--1/30/20
as-delivered
width of 3-segment display is wrong, will need to bend all leads to fit
IS 22.86 mm (0.9")
x ***SHOULD BE just under 1.00" 

require stand-alone programming pins
https://www.avdweb.nl/arduino/samd21/samd21-programmer
x ***SHOULD BE ICE header
- pull-up on SWCLK pin 1k (10k?) [has internal pull-up at start-up per page 88 of SAML21 foc, 15.6.2]
https://learn.adafruit.com/programming-an-m0-using-an-arduino
- 100k on SWDIO https://www.microchip.com/webdoc/GUID-B2CE0E6C-70BF-42CF-B0CF-6705800FC877/index.html?GUID-18A97AEC-DA07-42C5-A2DA-478F7092C442

x ***consider through-hole 10k thermistor
x ***add /MR reset to allow toggle of 1.8V rail

x ***add compressed air and flux to parts list [why air...?]

x ***typo on "electronic" missing 'c'

x ***1.8V and 3.3V are shorted
x ***add test point for every voltage, i2c.  5V, 3V3, 1V8, GND, SDA, SCL

x ***add place for debug led (no-pop in final model?)

ice header
https://www.segger.com/products/debug-probes/j-link/accessories/adapters/6-pin-needle-adapter/
https://www.segger.com/fileadmin/images/products/J-Link/Accessory/Adapters/J-Link-6-Pin-Adapter-Pinout.png
https://www.segger.com/fileadmin/images/products/J-Link/Accessory/Adapters/J-Link-6-Pin-Adapter-Schematic.png
https://forum.arduino.cc/index.php?topic=442133.0

x *** review power connections to saml21 vs checklist

x *** review v1.1 mock-up functionality

x *** 2.2 --> 10uF?

option to glue pcbs together for badge
 cyanoacrylate glue
https://hackaday.io/project/168314-pcb-badge-holder

x *** will 100 mil header fit adjacent to 3 segment screen?
x *** verify each silkscreen identified is exactly next to associated pad, not one over

get wire cutters that sever really close to onee edge for flat finish

x *** straighten test points

buy extra batty bq25155 ICs

x *** review bq25155, determine what caps are used on dev board

x *** avoid vias under silkscren as it makes text hard to read

x ***buy flux in next order

x *** buy digikey parts including through-hole thermistor
x *** and close wire cutters
1.3" lead length-ish

is useful to put test point pads directly opposite foot prints used by ICs (no overlap of vias/traces)

x *** buy clip leads for bq25155 breadboarding

2/7/20

v1.2 dims: 1.16 x 1.55", 29.46 x 39.37 mm [30 x 40 mm]
AllPCB
set to IS 6mil spacing (default WAS 8)
set min hole size to 0.3mm since there was no impact on cost
H44159AS5G10 2/8/20
PayPal balance
$24.00 including shipping
ETA 2/15/20

x *** take pngs of cad
x *** bom xlsx to csv
*** assign names to traces
*** usb test points, all spi
*** buy solder head with hose shoe tip
*** loopback geological identifier

-- 2/16/20

stencil 2.315x2.902
3 mil Polyimide
0.75" boarder (min available?)
$5 minimum order
$2.95 shipping domestic, 2-7 days
https://www.oshstencils.com

-- 2/23/20

***test points missing labels "5V0", etc, only list "TP7", etc (even though they appear in CAD view...)

-- 3/1/20

as-assembled
3V0 input from battery
tp1 gnd 0.00
tp3 !mp 2.62
tp8 sda 0.00
tp7 scl 0.00

tp2 5V0 0.00
tp4 PMID 0.00
tp5 3V3 0.06
tp6 1V8 0.00 expect 1.8V

tried tying !MR to GND, but observe no distinct change in 1V8.  Unclear is !MP remains low after toggle...

usb in
tp1 gnd 0.00
tp3 !mp 0.00
tp8 sda 1.66
tp7 scl 1.78

tp2 5V0 5.18
tp4 PMID 4.53
tp5 3V3 1.79
tp6 1V8 1.79
appears microprocessor is reciving 1V8 power (3V3 being clamped low?)

held !mr for 8 seconds with 3.7V on vbat:
tp1 gnd 0.00
tp3 !mp 3.27
tp8 sda 1.67
tp7 scl 1.78

tp2 5V0 0.00
tp4 PMID 3.70
tp5 3V3 1.79
tp6 1V8 1.79

current draw...

few nA in ship mode (nosie on measurements)
unable to remain OUT of ship mode with current monitor in circuit, but works as expected when current monitor is REMOVED (tying !MR low HOLDs OUT of ship mode)
even setting current monitor to uA range specifically still seems to have issue. Observe 3.69V with current monitor at UUT, 3.70V WITHOUT current monitor, so not a voltage drop issue...
in the realm of 300-500 uA in !MR reset

VLDO_4:0 - LDO output default to ENABLED and 1.8V

Project:
delay
PB22 and PB23 as output
USB Device CDC ACM
I2C SERCOM5, SCL PB31, SDA PB30
[will need interrupts...]
set processor to saml21j16b

*** query battery voltage when first connected to USB
- 3/2/20
rework saml, reflow processor

3.7V on battery, hold !MP low 5sec
tp1 0.00V
tp3 skip
tp8 1.76V
tp7 1.77V
tp2 0.00
tp4 3.70
tp5 1.79
tp6 1.79

ICE
GND 3, 5, 9
VTG/vref 1
nRST 10
SWDIO 2
SWDCLK 4

flashed blink program, but NO illumination
voltage on LED ~0.21V
unable to observe toggling voltages on several pins attempted PA14, PA23, PB23, PB22

3/5/20

*** add section to write in serial # on silkscreen
usb shells out of stock...

3/14/20

experiment to drive pins low that are externally weakly pulled high

successfully toggled PB30: 0V LOW 1 second, 1.8V HIGH 1 second

plan: re-attempt to toggle other pins, using PB30 as known-good debug
plan: try to get serial over usb

ATSAML21J16B

hmm, no test point on usb serial communication...
are pins not pulled HIGH when set as a "digital output" by atmel start project?
seeingly only PB30 and PB31 working so far...
could talk with BQ25155 if there was a serial output...

even with pull, PA14 still appears LOW

plan: can I get BQ25155 to output >1.8V?

*** consider for the future: processor has analog measure of VDD input: ensure NOT 0V to ensure processor is bonded to PCB properly

probing pin 48: pad is 1.8V, but processor pin ~0.1V
probably not getting VDDIO delivered properly somehow...
  design flaw or manufacturing flaw?
  why PB22 and PB23 non-responsive despite being on same bank as PB30 and PB31?

measuring internal voltage refernece to determine VDDIN...?

3/15/20

what is it about Atmel Studio and Atmel projects on Github that no one comments their code?  how to I2C @ device, register?
https://github.com/tinic/Pendant2019/blob/master/sdd1306.cpp

succesfully read 0x53 from reg 0x6F
note: first time doing an i2c read on a SMT board

want >2.16V on high-g accel

!!! bq25155 i2c disabled in low power mode

did ALLPCB remove the values on the TP markers?
looking for TP5 to change

first attempt NOT successful to write LDO disabled.  Try different methods...

*** double-check bq25155 caps against table 64 recommended values

blue SDA TP8
green SCL TP7

*** buy 2 channel oscope and/or multi high-impednace digital oscope

re-soldered pin 48 until top of pin read 1.8V (discovere applying pressure to pin altered whetehr 1.8V was being delivered or not)
observed 1.7V/GND toggling on pin 1 of screen (PA14) (IS) that was NOT seen previously (WAS)
confirms theory about presence of manufacturing defects: 3 of the VDDIO pins apparently were NOT making contact with PCB
still do NOT see toggling on PB22/PB23 LED

re-factored code to use transfer for i2c
https://www.avrfreaks.net/forum/i2cmsynccmdwrite-confusion
TP5 is GND

allow to settle OFF for a while, still over low voltages on TPR 4, 5 after turn-ON

TP2 5.17
tp4 4.52
tp5 1.78
tp6 1.78

set reg 0x36 to 0x03 (disable PMID)

TP2 5.17
tp4 0.43 and slowly discharging
tp5 0.18 and slowly discharging
tp6 1.77

set reg 0x36 to 0x00 (enable PMID)

TP2 5.17 5V0
tp4 4.52 PMID
tp5 1.77 3V3
tp6 1.77 1V8

using a combination of troubleshooting:
- is issue from hardware (bad assembly), design (bad routing/layout or understanding of the pdf's), or bad software (don't understand IDE)
- use tools available (single channel oscope), but find NO toggling on clock line despite infinite loop.  Find that reading using the digital inputs terminated the operation of the IC (troubleshooting tool introduces a fault condition)
- analog oscope shows some oscillations, but hard to line up between two channels when can only capture one at a time
- use solution online for the same problem I have, works to fix software issue

-- disable LDO
write 0x30 to 0x1D

TP2 5V0  5.16
tp4 PMID 4.52
tp5 3V3  0.01 LDO
tp6 1V8  1.77

-- set LDO to 2.3V

TP2 5V0  5.16
tp4 PMID 4.51
tp5 3V3  2.27 LDO
tp6 1V8  1.77

-- read who am i from accel

*** add I2C addresses to schematic for each device (0x6F for PMIC, 0x18 for accel)
  because connection of external pins can impact address, ref the accel address LSB dependence

device 0x18
reg 0x0F
value read: 0x32

*** consider 50 mil header for easier SWD interfacing

plan: write over i2c to accel
plan: usb serial
plan: usb programming
  plan: README.txt appears when plugging in as a mass storage device
  instructions to install Arduino IDE for terminal, then set terminal to 115200 baud
when charging: alternate between  "Chg" with osillating period, and a percent full (0-100), or a countdown (x minutes)

-- write with effect

reg 0x30 (INT1 config)
value 0x80 (default 0x00)
read back: 0x80, so read/write appears to be working to accel

started today with no communication (LED non-responsive)
then got I2C to demo a read
troubleshooting to resolve issue with writing
demo'd reading/writing to two I2C devices
  needed communciation with PMIC first to enable proper voltage for core of accel (presumably, who am i may have worked without 2.3V, but not verified)

plan: go in and out of deep sleep modes

tried example projects emulating serial terminal (echo) and mass storage device\
  in both cases, NO detetion of new device plugged in.  Appears USB operations are non-operational on this hardware (may be a soldering issue)

question for assembling another unit: is the DESIGN correct? vs spinning a new PCB

plan: see if triggering/reading interrupts is possible
plan: what percent of LCD outputs are non-operable?  may inform how many hardwares are actualy present within this unit

configure_usart
http://ww1.microchip.com/downloads/en/AppNotes/Atmel-42699-ASF-Manual-(SAML21)_ApplicationNote_AT11513.pdf

#ifdef __cplusplus
extern "C" {
#endif
static struct usart_module cdc_uart_module;
static struct tc_module tc_instance;
/**
 *  Configure UART console.
 */
static void configure_console(void)
{
	struct usart_config usart_conf;

	usart_get_config_defaults(&usart_conf);
	usart_conf.mux_setting = CONF_STDIO_MUX_SETTING; //USART_RX_1_TX_0_XCK_1
	usart_conf.pinmux_pad0 = CONF_STDIO_PINMUX_PAD0; //PINMUX_PA22C_SERCOM3_PAD0
	usart_conf.pinmux_pad1 = CONF_STDIO_PINMUX_PAD1; //PINMUX_PA23C_SERCOM3_PAD1
	usart_conf.pinmux_pad2 = CONF_STDIO_PINMUX_PAD2; //PINMUX_UNUSED
	usart_conf.pinmux_pad3 = CONF_STDIO_PINMUX_PAD3; //PINMUX_UNUSED
	usart_conf.baudrate    = CONF_STDIO_BAUDRATE;

	stdio_serial_init(&cdc_uart_module, CONF_STDIO_USART_MODULE, &usart_conf); //SERCOM3
	usart_enable(&cdc_uart_module);
}

need to have PA22 and PA23 in order to do serial????

Table 7-6 lists clusters around voltage inputs vddio, vswout...

Is GETTING_STARTED demo doing UART through *target* usb or *edge debugger* usb?

~~ 1/17/21

added 2*3 100 mil header to BOM:
https://www.digikey.com/product-detail/en/PH2-06-UA/2057-PH2-06-UA-ND/9830396/?itemSeq=351205478

~~ 2/6/21

reflow

note: should have brought solder wick
applied too much solder, got several bridges between saml21 pins
*** could really use a horse shoe solder tip (and a reflow oven and digital microscope and pick/place machine)
solution to resolving bridges was a combination of connecting the solder tip to the lead and pulling the solder tip away from the chip - into the solder wick

3.7 on BAT, <10 mA per power supply

as-assembled, BAT power:
TP2  5V0 0.00
TP4 PMID 0.00
TP5  3V3 0.23
TP6  1V8 0.00

TP1  GND 0.00
TP3  ~MR 3.29
TP8  SDA 0.00
TP7  SCL 0.00

tie TP3 ~MR to GND for 5 sec

TP2  5V0 0.00
TP4 PMID 3.72
TP5  3V3 1.80
TP6  1V8 1.79

TP1  GND 0.00
TP3  ~MR 3.29
TP8  SDA 1.78
TP7  SCL 1.78

odd to 3V3 come up as 1.8, thought it start up OFF...?
but IS consistent with past readings, so continue

remove BAT connection
***use USB 3... got <0.2V.  seems PC sets this to OFF at the PC port...? (need 57 kOhm connections?)
plug usb A to USB adapter, seems to work now

TP2  5V0 5.17
TP4 PMID 4.49
TP5  3V3 1.80
TP6  1V8 1.79

TP1  GND 0.00
TP3  ~MR 0.00
TP8  SDA 1.78
TP7  SCL 1.78

ATmel ICE connections for SWD
ICE pin 10 --> egg SWD pin nReset
ICE pin 1 --> egg vRef
ICE pin 2 --> egg SWDIO
ICE pin 4 --> egg swclk
ICE pin 3, 5, 6 --> ground together and connect to egg pin GND

connect usb C (though adapter to USB A) to PC
connect Atmel ICE

atmel ICE LEDs are (from edge to center) green-red-OFF
(disconnecting egg USB power input, Atmel ICE connections are OFF-red-OFF, reconnect egg USB power)

open Atmel Studio, create project
atsaml21j16b, TQFP
add:
x - USB UART Click --> no USART on SAML [PA24, PA25]
- I2C [SERCOM_5 PAD[0] SDA/PB30, PAD[1] SCL/PB31]  baud rate? 100-400 kHz for BQ25155, same for h3lis200dltr.  default is 100 kHz in Atmel studio
- External IRQ [EXINT[5]/PA05, EXINT[6]/PA06, EXINT[7]/PA07] rising-edge detection? (***?)
- GPO [LED: PB22, PB23; screen: many per schematic; did the first 3...]
- sleep
x - USB Device CDC ACM (? removed until demo project can be found...)
x - FUTURE: add delay

set swd interface for atmel ice
upload program...

unexpected chip identified 0x1081020f (expect 0x10810211)

change part to 16B --> 18B

LED lights for ~25% ON, ~75% OFF
alignment of LED matches schematic

forgot how to debug register values...?

how to set fuses (allow program over usb)
https://www.youtube.com/watch?v=vG7Lh7Kg_sI
device programming
change usb BOOTPROT fuse: https://learn.adafruit.com/how-to-program-samd-bootloaders/programming-the-bootloader-with-atmel-studio
appears to already be open (0x07) setting

http://ww1.microchip.com/downloads/en/DeviceDoc/Atmel-42352-SAM-D21-XPRO-USB-Host-MSC-Bootloader_Training-Manual_AN8185.pdf

arduino saml21
https://github.com/mattairtech/ArduinoCore-samd
https://www.mattairtech.com/software/arduino/package_MattairTech_index.json
MattairTech D|L|C Core Installation

unable to detect device (no COM port, unable to flash bootloader over Atmel ICE)

want to test simple echo project from before...

USB CDC ACM in usb_test3_solution

*** any special considerations needed for usb signal matching from saml2 to usb header?

run usb_test3 with usb-c to usb-a adapter from retoGame kit
Device Manager: Device Descriptor Request Failed

usb2_test
loads as COM5
echo at both 115200 and 9600 baud
USB connection appears to work, but how to tie into printf()...

>>> usb bootloader...
"saml21 usb bootloader"
http://ww1.microchip.com/downloads/en/DeviceDoc/Atmel-42650-SAM-BA-Bootloader-for-SAM-L-Devices_ApplicationNote_AT10840.pdf

step 2.1 --> need to "Build >> Build Solution" first to make debug hex file
D:\Projects\EletronicEgg\src\test\getting_started1\SAMBA_BOOTLOADER1\SAMBA_BOOTLOADER1\Debug

Alternately, command-line programming tool atprogram can also be used for programming the hex file.Example Command:atprogram –t edbg –i swd –d atsaml22n18a program –fSAMBA_BOOT_SAML22_XPRO.hex

2.2Entering the BootloaderThe SAM L21/ L22 SAM-BA relies on a SAM-BA bootloader which is stored in flash memory. This monitorwill be executed according conditions specified in the boot process.SAM-BA bootloader activation can be requested using one of the following ways:•External condition: Reset the part and make sure the Hardware Bootloader Entry pin (PC01 forSAM L22 & PA02 for SAM L21) is pulled low, when reset is released. A common usage is to use apush button accessible by the user as a bootloader trigger. The user must simply hold the pushbutton when powering up the device.

but adafruit metro doesn't need a button to reprogram over usb...

PA02 for reset on SAML21 (hold low during boot for bootloader to run)

software tool for usb programming:
https://www.microchip.com/developmenttools/ProductDetails/PartNO/SAM-BA%20In-system%20Programmer#additional-summary

>>> relocate app to new start address
https://ww1.microchip.com/downloads/en/DeviceDoc/00002565A.pdf
section 5.2

note on I2C speed: On the L21, SERCOM5 is in a low power domain. The Fm+ and HS modes of I2C (wire) are not supported.

bootloader from:
https://github.com/mattairtech/ArduinoCore-samd/blob/master/bootloaders/zero/README.md

(FYI: set BOOTPROT to 0x02 --> 8k)
https://www.farnell.com/datasheets/2014285.pdf

set bootprot to 0x07 (0k boot)
upload to flash: sam_ba_Generic_x21J_SAML21J18B.bin
set bootprot to 0x02 (8k boot)

now windows is reporting errors of USB device

unplug/replug USB to power cycle

errors continue

took ~10 minutes, but then windows suddenly recognized device... listed part number SAML21...

then went back to error messages

closed atmel studio

waited for more minutes of error

COM8 appeared in device manager
immedaitely programmed over Arduino IDE


Sketch uses 9880 bytes (3%) of program storage space. Maximum is 253952 bytes.
Atmel SMART device 0x1081000f found
Device       : ATSAML21J18B
Chip ID      : 1081000f
Version      : v2.0 [Arduino:XYZ] Nov 22 2017 12:56:20
Address      : 8192
Pages        : 3968
Page Size    : 64 bytes
Total Size   : 248KB
Planes       : 1
Lock Regions : 16
Locked       : none
Security     : false
Boot Flash   : true
BOD          : false
BOR          : true
Arduino      : FAST_CHIP_ERASE
Arduino      : FAST_MULTI_PAGE_WRITE
Arduino      : CAN_CHECKSUM_MEMORY_BUFFER
Erase flash
done in 1.073 seconds

Write 10232 bytes to flash (160 pages)
[==============================] 100% (160/160 pages)
done in 0.060 seconds

Verify 10232 bytes of flash with checksum.
Verify successful
done in 0.008 seconds
CPU reset.

sucessfully uploaded a serial test program to SAML21 using Arduino IDE at 115200 debug output (prints 

prints in 300 ms increments:
21977
22277
30677

8877
..
30677

appears to get reset by something the PC does (timestamp always restarting).  TImestamp goes up to 30 seconds and restarts.  Implies PC is rebooting periphreal (5V toggle?) every 30 seconds...

will need to check impedance matching on USB connection?  How long can echo project run?

note: usb_terst2 is under the InfoBadge project folder

set BOOTPROT to 0x07 (no protection)

COM5 appears rock solid now

maybe floating reset pin on Matt's files was doing something...?

PB22
PB23 for gpio LED

direct usb-c connection continues to fail, must use usb-a/c adapter

SAM-BA (boot assitant) appears unsupported on Windows 10 (at least the GUI part)

so Matt code has contant reboot issue; Atmel solution can't be programmed over USB...?

running i2c_test on SAML21J18B device (WAS -16B)...

0x35 on reset from BQ25155

is 2.3V coming from BQ...?

0x32 from accel

create a file/class for BQ and accel
- verify self-identifier
- set LDO voltage (3.3V)
(disable LDO)
- get accel x, y, z
- get samples ready for read from accel (may be zero)
- accel low power mode

*** use toggle on MR to get into I2C mode per old foum post with TI

*** change USB resistors to 56k --> 5k ohms to ground
@ 4 minutes: https://www.youtube.com/watch?v=5-_QlT-YU-Q










